apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "technical-challenge.fullname" . }}
  labels:
    {{- include "technical-challenge.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "technical-challenge.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "technical-challenge.selectorLabels" . | nindent 8 }}
        {{- range $index, $value := .Values.extraLabels }}
        {{ $index }}: {{ $value }}
        {{- end }}
      annotations:
        buildID: {{ .Values.buildID | default "" | quote }}
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "technical-challenge.fullname" . }}      
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.Version}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          {{- if .Values.probes.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.livenessProbe.httpGet.path }}
              port: {{ .Values.probes.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.probes.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readinessProbe.httpGet.path }}
              port: {{ .Values.probes.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.probes.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readinessProbe.periodSeconds }}
          {{- end }}
          env:
            - name: Api__Authentication__ServiceAccountTokenClient__ClientSecret
              value: {{  .Values.secrets.serviceAccount.secret | quote }}  

            {{- $root := . }}
            {{- range $ref, $values := .Values.secrets }}
            {{- range $key, $value := $values }}
            - name: {{ $ref }}__{{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "technical-challenge.fullname" $root }}-{{ $ref | lower }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
{{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
{{- end }}
      imagePullSecrets:
        - name: dockerhub-auth
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
