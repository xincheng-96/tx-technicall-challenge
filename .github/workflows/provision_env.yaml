# This workflow installs the latest version of Terraform CLI and configures the Terraform CLI configuration file
# with an API token for Terraform Cloud (app.terraform.io). On pull request events, this workflow will run
# `terraform init`, `terraform fmt`, and `terraform plan` (speculative plan via Terraform Cloud). On push events
# to the "main" branch, `terraform apply` will be executed.

name: 'provision_env_terraform'

on:
  push:
  #  branches: [ "main" ]
  #  paths:
  #    - '**/*.tf'
  #    - '**/*.tfvars'
  #pull_request:
  #  paths:
  #    - '**/*.tf'
  #    - '**/*.tfvars'

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: sandbox

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.1
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Create AWS CLI Config directory
      run: |
        mkdir .aws
    - name: Install credentials
      run: |
        echo "${{ secrets.AWS_TOKEN }}" > .aws/creds

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files are valid
    - name: Terraform Validate
      run: terraform validate

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -var-file variable.tfvars -input=false

      # On push to "main", build or change infrastructure according to Terraform configuration files
      #this is not tested
    #- name: Terraform Apply
    #  if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
    #  run: terraform apply -var-file variable.tfvars -auto-approve -input=false

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    
    - name: Get EKS kubeconfig file
      run: aws eks --region eu-central-1 update-kubeconfig --name sandbox-sandbox

    - uses: actions-hub/kubectl@master
      with:
        args: get pods