name: CI-Main
on:
  push:
    branches:
      - main
      - sonar-scan
    paths:
      - 'doker/**'
  workflow_call:
    inputs:
        tag-rules:
            description: Use docker-metadata action to create tags from a key-value pair list in CSV format
            required: false
            type: string
            default: |
                type=ref,event=branch
                type=ref,event=pr
                type=semver,pattern={{version}}
                type=semver,pattern={{major}}.{{minor}}

permissions:
  contents: read

env:
  IMAGE_NAME: technical-challenge
  REGISTRY: docker.io
jobs:
  sonar-scan:
    runs-on: sonarsource/sonar-scanner-cli

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v2
      - name: Sonar Scan
        uses: tradeshift/actions-sonarqube@v2
        with:
          # This should be put into GH Secrets, but I don't have access
          token: f918e71934e468085c69b9615da22ce4d11f9f9e
          host: https://sonar.alatvala.fi

  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v4.3.0
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r ./doker/requirements.txt
      - name: Test with pytest
        run: |
          cd ./doker/tests
          python3 -m pytest

  push:
    runs-on: ubuntu-latest
    needs: build-test
    steps:

      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract Metadata for Image
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: ${{ inputs.tag-rules }}

      - name: Build and push to Docker Hub
        id: docker_build_dockerhub
        uses: docker/build-push-action@v3
        with:
          context:  ./doker
          file:  ./doker/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}