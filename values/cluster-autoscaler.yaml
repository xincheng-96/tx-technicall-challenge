awsRegion: "eu-central-1"

autoDiscovery:
  clusterName: ${eks_cluster_name}
  tags:
  - k8s.io/cluster-autoscaler/enabled
  - k8s.io/cluster-autoscaler/${eks_cluster_name}

cloudProvider: aws

image:
  # image.repository -- Image repository
  repository: us.gcr.io/k8s-artifacts-prod/autoscaling/cluster-autoscaler
  # image.tag -- Image tag
  tag: v1.21.0
  # image.pullPolicy -- Image pull policy
  pullPolicy: IfNotPresent

podAnnotations:
  cluster-autoscaler.kubernetes.io/safe-to-evict: "false"

# replicaCount -- Desired number of pods
replicaCount: 2

# resources -- Pod resource requests and limits.
resources: 
  limits:
    memory: 700Mi
  requests:
    cpu: 300m
    memory: 550Mi

priorityClassName: system-cluster-critical

updateStrategy:
   rollingUpdate:
     maxSurge: 1
     maxUnavailable: 0
   type: RollingUpdate

podDisruptionBudget: |
  maxUnavailable: 1
 
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: aws-cluster-autoscaler  
      topologyKey: kubernetes.io/hostname
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: aws-cluster-autoscaler  
        topologyKey: topology.kubernetes.io/zone
  nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: k8s-node
              operator: In
              values:
              - sandbox

extraArgs:
  v: 4
  leader-elect: true  
